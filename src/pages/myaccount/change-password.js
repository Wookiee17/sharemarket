import Head from "next/head";
import React, { useEffect, useState } from "react";
import { useDispatch, useSelector } from "react-redux";
import { useRouter } from "next/router";
import { useUserData } from "@nhost/nextjs";
import { useChangePassword, useSignOut } from "@nhost/react";
import { setIsAuth } from "../../store/shield/ShieldSlice";

//Layout
import Layout from "../../common/layouts/Layout";
import { setActiveAccountTab } from "../../store/account/AccountSlice";
import * as Components from "../../common/assets/styles/Components";
import swal from "sweetalert";
// component
const ChangePassword = () => {
  const { signOut } = useSignOut();
  const theme = useSelector((state) => state.Common.theme);
  const Tabs = useSelector((state) => state.Account.AccountTabs);
  const activeTab = useSelector((state) => state.Account.activeAccountTab);
  // const [currenPassword, setCurrenPassword] = useState();
  const [newPassword, setNewPassword] = useState();
  const [confirmNewPassword, setConfirmNewPassword] = useState();
  const router = useRouter();
  const dispatch = useDispatch();
  const userData = useUserData();

  const { changePassword, isLoading, isSuccess, isError, error } =
    useChangePassword();
  const handlePassword = async (e) => {
    e.preventDefault();
    try {
      const result = await changePassword(newPassword);
      console.log("reulsl tiadsfas", result);
      setNewPassword("");
      setConfirmNewPassword("");
      swal({
        text: "Password Changed Successfully",
        icon: "success",
        title: "Success",
      });
    } catch (error) {
      swal({
        text: "Password Must be Same",
        icon: "warning",
        title: "Warning",
      });
      console.log("Erawerqwaera", error);
      if (error?.response?.status === 401) {
        console.log(error?.response?.status, "error");
      }
    }
  };
  // console.log(changePassword, "changed");

  const _changeTab = (id, slug) => {
    if (slug == "log-out") {
      signOut();
      dispatch(setIsAuth(false));
      dispatch(setActiveAccountTab(0));
      router.push("/authentication");
    } else {
      router.push(`/myaccount/${slug}`);
      dispatch(setActiveAccountTab(id));
    }
  };

  return (
    <Layout>
      <div className={`tabs-body ${theme}`}>
        <Head>
          <title>Account | IC Trading</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <div className={`account ${theme}`}>
          <div className="account_left-tab">
            <div className="sidebar">
              {Tabs.map((item, i) => (
                <div
                  key={i}
                  className={`tabs ${activeTab == item.id && "active"}`}
                  onClick={() => {
                    _changeTab(item.id, item.slug);
                  }}
                >
                  <p>{item.name}</p>
                </div>
              ))}
            </div>
          </div>
          <div className={`account_right ${theme}`}>
            <Components.AccountContainer onSubmit={handlePassword}>
              <Components.ProfileForm>
                <Components.Title>Change Password</Components.Title>
                <Components.Input
                  type="password"
                  placeholder="New Password"
                  value={newPassword}
                  onChange={(e) => setNewPassword(e.target.value)}
                  required
                />
                <Components.Input
                  type="password"
                  placeholder="Confirm New Password"
                  value={confirmNewPassword}
                  onChange={(e) => setConfirmNewPassword(e.target.value)}
                  required
                />

                <Components.GhostButton
                  style={{ marginTop: "2rem" }}
                  type={"submit"}
                  size={"lg"}
                >
                  Change Password
                </Components.GhostButton>
              </Components.ProfileForm>
            </Components.AccountContainer>
          </div>
        </div>
      </div>
    </Layout>
  );
};

export default ChangePassword;
